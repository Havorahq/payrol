/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BatchPayments,
  BatchPaymentsInterface,
} from "../../Batch.sol/BatchPayments";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "contractType",
            type: "string",
          },
          {
            internalType: "address",
            name: "agreementAddress",
            type: "address",
          },
        ],
        internalType: "struct BatchPayments.Agreement[]",
        name: "_agreements",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contractType",
        type: "string",
      },
      {
        internalType: "address",
        name: "_agreementAddress",
        type: "address",
      },
    ],
    name: "addAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "agreements",
    outputs: [
      {
        internalType: "string",
        name: "contractType",
        type: "string",
      },
      {
        internalType: "address",
        name: "agreementAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getContractAtIndex",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "contractType",
            type: "string",
          },
          {
            internalType: "address",
            name: "agreementAddress",
            type: "address",
          },
        ],
        internalType: "struct BatchPayments.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "contractType",
            type: "string",
          },
          {
            internalType: "address",
            name: "agreementAddress",
            type: "address",
          },
        ],
        internalType: "struct BatchPayments.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performBatchPayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200181c3803806200181c8339818101604052810190620000379190620004ba565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b81518110156200013c5760018282815181106200009c576200009b6200050b565b5b602002602001015190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081620000e4919062000785565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505080806001019150506200007a565b50506200086c565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a8826200015d565b810181811067ffffffffffffffff82111715620001ca57620001c96200016e565b5b80604052505050565b6000620001df62000144565b9050620001ed82826200019d565b919050565b600067ffffffffffffffff82111562000210576200020f6200016e565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156200025357620002526200016e565b5b6200025e826200015d565b9050602081019050919050565b60005b838110156200028b5780820151818401526020810190506200026e565b60008484015250505050565b6000620002ae620002a88462000235565b620001d3565b905082815260208101848484011115620002cd57620002cc62000230565b5b620002da8482856200026b565b509392505050565b600082601f830112620002fa57620002f962000158565b5b81516200030c84826020860162000297565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003428262000315565b9050919050565b620003548162000335565b81146200036057600080fd5b50565b600081519050620003748162000349565b92915050565b60006040828403121562000393576200039262000226565b5b6200039f6040620001d3565b9050600082015167ffffffffffffffff811115620003c257620003c16200022b565b5b620003d084828501620002e2565b6000830152506020620003e68482850162000363565b60208301525092915050565b6000620004096200040384620001f2565b620001d3565b905080838252602082019050602084028301858111156200042f576200042e62000221565b5b835b818110156200047d57805167ffffffffffffffff81111562000458576200045762000158565b5b8086016200046789826200037a565b8552602085019450505060208101905062000431565b5050509392505050565b600082601f8301126200049f576200049e62000158565b5b8151620004b1848260208601620003f2565b91505092915050565b600060208284031215620004d357620004d26200014e565b5b600082015167ffffffffffffffff811115620004f457620004f362000153565b5b620005028482850162000487565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058d57607f821691505b602082108103620005a357620005a262000545565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200060d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005ce565b620006198683620005ce565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000666620006606200065a8462000631565b6200063b565b62000631565b9050919050565b6000819050919050565b620006828362000645565b6200069a62000691826200066d565b848454620005db565b825550505050565b600090565b620006b1620006a2565b620006be81848462000677565b505050565b5b81811015620006e657620006da600082620006a7565b600181019050620006c4565b5050565b601f8211156200073557620006ff81620005a9565b6200070a84620005be565b810160208510156200071a578190505b620007326200072985620005be565b830182620006c3565b50505b505050565b600082821c905092915050565b60006200075a600019846008026200073a565b1980831691505092915050565b600062000775838362000747565b9150826002028217905092915050565b62000790826200053a565b67ffffffffffffffff811115620007ac57620007ab6200016e565b5b620007b8825462000574565b620007c5828285620006ea565b600060209050601f831160018114620007fd5760008415620007e8578287015190505b620007f4858262000767565b86555062000864565b601f1984166200080d86620005a9565b60005b82811015620008375784890151825560018201915060208501945060208101905062000810565b8683101562000857578489015162000853601f89168262000747565b8355505b6001600288020188555050505b505050505050565b610fa0806200087c6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633f26781e1461006757806364b65f6e146100715780638da5cb5b1461008d5780639b534f18146100ab578063bd14de96146100db578063c3a2a93a1461010c575b600080fd5b61006f61012a565b005b61008b6004803603810190610086919061085a565b6101ba565b005b610095610307565b6040516100a291906108c5565b60405180910390f35b6100c560048036038101906100c09190610916565b61032b565b6040516100d29190610a0e565b60405180910390f35b6100f560048036038101906100f09190610916565b61044f565b604051610103929190610a7a565b60405180910390f35b61011461052b565b6040516101219190610ba9565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101af90610c3d565b60405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610c3d565b60405180910390fd5b600060405180604001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff168152509050600181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816102b89190610e69565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610333610672565b6001828154811061034757610346610f3b565b5b906000526020600020906002020160405180604001604052908160008201805461037090610c8c565b80601f016020809104026020016040519081016040528092919081815260200182805461039c90610c8c565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6001818154811061045f57600080fd5b906000526020600020906002020160009150905080600001805461048290610c8c565b80601f01602080910402602001604051908101604052809291908181526020018280546104ae90610c8c565b80156104fb5780601f106104d0576101008083540402835291602001916104fb565b820191906000526020600020905b8154815290600101906020018083116104de57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610669578382906000526020600020906002020160405180604001604052908160008201805461058290610c8c565b80601f01602080910402602001604051908101604052809291908181526020018280546105ae90610c8c565b80156105fb5780601f106105d0576101008083540402835291602001916105fb565b820191906000526020600020905b8154815290600101906020018083116105de57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061054f565b50505050905090565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610709826106c0565b810181811067ffffffffffffffff82111715610728576107276106d1565b5b80604052505050565b600061073b6106a2565b90506107478282610700565b919050565b600067ffffffffffffffff821115610767576107666106d1565b5b610770826106c0565b9050602081019050919050565b82818337600083830152505050565b600061079f61079a8461074c565b610731565b9050828152602081018484840111156107bb576107ba6106bb565b5b6107c684828561077d565b509392505050565b600082601f8301126107e3576107e26106b6565b5b81356107f384826020860161078c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610827826107fc565b9050919050565b6108378161081c565b811461084257600080fd5b50565b6000813590506108548161082e565b92915050565b60008060408385031215610871576108706106ac565b5b600083013567ffffffffffffffff81111561088f5761088e6106b1565b5b61089b858286016107ce565b92505060206108ac85828601610845565b9150509250929050565b6108bf8161081c565b82525050565b60006020820190506108da60008301846108b6565b92915050565b6000819050919050565b6108f3816108e0565b81146108fe57600080fd5b50565b600081359050610910816108ea565b92915050565b60006020828403121561092c5761092b6106ac565b5b600061093a84828501610901565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561097d578082015181840152602081019050610962565b60008484015250505050565b600061099482610943565b61099e818561094e565b93506109ae81856020860161095f565b6109b7816106c0565b840191505092915050565b6109cb8161081c565b82525050565b600060408301600083015184820360008601526109ee8282610989565b9150506020830151610a0360208601826109c2565b508091505092915050565b60006020820190508181036000830152610a2881846109d1565b905092915050565b600082825260208201905092915050565b6000610a4c82610943565b610a568185610a30565b9350610a6681856020860161095f565b610a6f816106c0565b840191505092915050565b60006040820190508181036000830152610a948185610a41565b9050610aa360208301846108b6565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301518482036000860152610af38282610989565b9150506020830151610b0860208601826109c2565b508091505092915050565b6000610b1f8383610ad6565b905092915050565b6000602082019050919050565b6000610b3f82610aaa565b610b498185610ab5565b935083602082028501610b5b85610ac6565b8060005b85811015610b975784840389528151610b788582610b13565b9450610b8383610b27565b925060208a01995050600181019050610b5f565b50829750879550505050505092915050565b60006020820190508181036000830152610bc38184610b34565b905092915050565b7f596f7520617265206e6f7420616c6c6f77656420746f206361727279206f757460008201527f207468697320616374696f6e0000000000000000000000000000000000000000602082015250565b6000610c27602c83610a30565b9150610c3282610bcb565b604082019050919050565b60006020820190508181036000830152610c5681610c1a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ca457607f821691505b602082108103610cb757610cb6610c5d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d1f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ce2565b610d298683610ce2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610d66610d61610d5c846108e0565b610d41565b6108e0565b9050919050565b6000819050919050565b610d8083610d4b565b610d94610d8c82610d6d565b848454610cef565b825550505050565b600090565b610da9610d9c565b610db4818484610d77565b505050565b5b81811015610dd857610dcd600082610da1565b600181019050610dba565b5050565b601f821115610e1d57610dee81610cbd565b610df784610cd2565b81016020851015610e06578190505b610e1a610e1285610cd2565b830182610db9565b50505b505050565b600082821c905092915050565b6000610e4060001984600802610e22565b1980831691505092915050565b6000610e598383610e2f565b9150826002028217905092915050565b610e7282610943565b67ffffffffffffffff811115610e8b57610e8a6106d1565b5b610e958254610c8c565b610ea0828285610ddc565b600060209050601f831160018114610ed35760008415610ec1578287015190505b610ecb8582610e4d565b865550610f33565b601f198416610ee186610cbd565b60005b82811015610f0957848901518255600182019150602085019450602081019050610ee4565b86831015610f265784890151610f22601f891682610e2f565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220949ea2b0a74b426e7f834bdb94605f2c7c6b909a78353f6340e0b15ab48162d764736f6c63430008180033";

type BatchPaymentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchPaymentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchPayments__factory extends ContractFactory {
  constructor(...args: BatchPaymentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _agreements: BatchPayments.AgreementStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_agreements, overrides || {});
  }
  override deploy(
    _agreements: BatchPayments.AgreementStruct[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_agreements, overrides || {}) as Promise<
      BatchPayments & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BatchPayments__factory {
    return super.connect(runner) as BatchPayments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchPaymentsInterface {
    return new Interface(_abi) as BatchPaymentsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchPayments {
    return new Contract(address, _abi, runner) as unknown as BatchPayments;
  }
}
