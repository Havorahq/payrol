/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FixedRateAgreement,
  FixedRateAgreementInterface,
} from "../../contracts/FixedRateAgreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_employerId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_employeeId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_employerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fixedPayment",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "employeeAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "employerAddress",
        type: "address",
      },
    ],
    name: "FixedPaymentMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "agreementAddress",
        type: "address",
      },
    ],
    name: "PaymentMade",
    type: "event",
  },
  {
    inputs: [],
    name: "agreementStatus",
    outputs: [
      {
        internalType: "enum Agreement.AgreementStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentAddress",
        type: "address",
      },
    ],
    name: "employeeEnterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "employeeId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "employerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "employerId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentStatus",
    outputs: [
      {
        internalType: "enum FixedRateAgreement.PaymentStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendPayment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "suspend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600760006101000a81548160ff021916908360018111156200002d576200002c6200019c565b5b02179055503480156200003f57600080fd5b5060405162001d4e38038062001d4e8339818101604052810190620000659190620003fe565b848484846040518060400160405280600a81526020017f66697865642072617465000000000000000000000000000000000000000000008152508460009081620000b0919062000705565b508360019081620000c2919062000705565b5082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600460146101000a81548160ff021916908360048111156200016e576200016d6200019c565b5b0217905550806005908162000184919062000705565b505050505050806006819055505050505050620007ec565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023482620001e9565b810181811067ffffffffffffffff82111715620002565762000255620001fa565b5b80604052505050565b60006200026b620001cb565b905062000279828262000229565b919050565b600067ffffffffffffffff8211156200029c576200029b620001fa565b5b620002a782620001e9565b9050602081019050919050565b60005b83811015620002d4578082015181840152602081019050620002b7565b60008484015250505050565b6000620002f7620002f1846200027e565b6200025f565b905082815260208101848484011115620003165762000315620001e4565b5b62000323848285620002b4565b509392505050565b600082601f830112620003435762000342620001df565b5b815162000355848260208601620002e0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200038b826200035e565b9050919050565b6200039d816200037e565b8114620003a957600080fd5b50565b600081519050620003bd8162000392565b92915050565b6000819050919050565b620003d881620003c3565b8114620003e457600080fd5b50565b600081519050620003f881620003cd565b92915050565b600080600080600060a086880312156200041d576200041c620001d5565b5b600086015167ffffffffffffffff8111156200043e576200043d620001da565b5b6200044c888289016200032b565b955050602086015167ffffffffffffffff81111562000470576200046f620001da565b5b6200047e888289016200032b565b94505060406200049188828901620003ac565b9350506060620004a488828901620003ac565b9250506080620004b788828901620003e7565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200051757607f821691505b6020821081036200052d576200052c620004cf565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000558565b620005a3868362000558565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005e6620005e0620005da84620003c3565b620005bb565b620003c3565b9050919050565b6000819050919050565b6200060283620005c5565b6200061a6200061182620005ed565b84845462000565565b825550505050565b600090565b6200063162000622565b6200063e818484620005f7565b505050565b5b8181101562000666576200065a60008262000627565b60018101905062000644565b5050565b601f821115620006b5576200067f8162000533565b6200068a8462000548565b810160208510156200069a578190505b620006b2620006a98562000548565b83018262000643565b50505b505050565b600082821c905092915050565b6000620006da60001984600802620006ba565b1980831691505092915050565b6000620006f58383620006c7565b9150826002028217905092915050565b6200071082620004c4565b67ffffffffffffffff8111156200072c576200072b620001fa565b5b620007388254620004fe565b620007458282856200066a565b600060209050601f8311600181146200077d576000841562000768578287015190505b620007748582620006e7565b865550620007e4565b601f1984166200078d8662000533565b60005b82811015620007b75784890151825560018201915060208501945060208101905062000790565b86831015620007d75784890151620007d3601f891682620006c7565b8355505b6001600288020188555050505b505050505050565b61155280620007fc6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063900feb3b1161008c578063e5a6b10f11610066578063e5a6b10f146101f1578063e6400bbe1461020f578063ea8a1af014610219578063ef838f8814610223576100ea565b8063900feb3b1461019957806398b9f004146101b7578063cb2ef6f7146101d3576100ea565b806343d726d6116100c857806343d726d614610135578063633423be1461013f5780636720ceb11461015d57806384ab30a51461017b576100ea565b80630d0175a9146100ef57806310ccb04c1461010d57806324600fc31461012b575b600080fd5b6100f7610241565b6040516101049190610e19565b60405180910390f35b610115610267565b6040516101229190610eab565b60405180910390f35b61013361027a565b005b61013d61030c565b005b61014761043e565b6040516101549190610e19565b60405180910390f35b610165610464565b6040516101729190610ee1565b60405180910390f35b61018361074c565b6040516101909190610f8c565b60405180910390f35b6101a16107da565b6040516101ae9190610ff6565b60405180910390f35b6101d160048036038101906101cc9190611042565b6107ed565b005b6101db6108d2565b6040516101e89190610f8c565b60405180910390f35b6101f9610960565b6040516102069190610e19565b60405180910390f35b610217610986565b005b610221610b2e565b005b61022b610c61565b6040516102389190610f8c565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610301906110e1565b60405180910390fd5b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610393906110e1565b60405180910390fd5b600360048111156103b0576103af610e34565b5b600460149054906101000a900460ff1660048111156103d2576103d1610e34565b5b03610412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040990611173565b60405180910390fd5b60048060146101000a81548160ff0219169083600481111561043757610436610e34565b5b0217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906110e1565b60405180910390fd5b6001600481111561050a57610509610e34565b5b600460149054906101000a900460ff16600481111561052c5761052b610e34565b5b1461056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390611205565b60405180910390fd5b60018081111561057f5761057e610e34565b5b600760009054906101000a900460ff1660018111156105a1576105a0610e34565b5b036105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d890611271565b60405180910390fd5b61060f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600654610cef565b6001600760006101000a81548160ff0219169083600181111561063557610634610e34565b5b021790555060048060146101000a81548160ff0219169083600481111561065f5761065e610e34565b5b02179055503073ffffffffffffffffffffffffffffffffffffffff167f960f80c1468168314e9bb3daa45c4819ef0a7969615e253bbc73477997b1eb5860405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f80cc066594d46a1c222dffb998d2a0b113cba551c911573a088260abc6cbebd660405160405180910390a36001905090565b60018054610759906112c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610785906112c0565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b505050505081565b600760009054906101000a900460ff1681565b6000600481111561080157610800610e34565b5b600460149054906101000a900460ff16600481111561082357610822610e34565b5b14610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a90611363565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460146101000a81548160ff021916908360048111156108ca576108c9610e34565b5b021790555050565b600580546108df906112c0565b80601f016020809104026020016040519081016040528092919081815260200182805461090b906112c0565b80156109585780601f1061092d57610100808354040283529160200191610958565b820191906000526020600020905b81548152906001019060200180831161093b57829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d906110e1565b60405180910390fd5b60036004811115610a2a57610a29610e34565b5b600460149054906101000a900460ff166004811115610a4c57610a4b610e34565b5b03610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8390611173565b60405180910390fd5b600480811115610a9f57610a9e610e34565b5b600460149054906101000a900460ff166004811115610ac157610ac0610e34565b5b03610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af8906113f5565b60405180910390fd5b6002600460146101000a81548160ff02191690836004811115610b2757610b26610e34565b5b0217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb5906110e1565b60405180910390fd5b60036004811115610bd257610bd1610e34565b5b600460149054906101000a900460ff166004811115610bf457610bf3610e34565b5b03610c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2b90611173565b60405180910390fd5b6003600460146101000a81548160ff02191690836004811115610c5a57610c59610e34565b5b0217905550565b60008054610c6e906112c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9a906112c0565b8015610ce75780601f10610cbc57610100808354040283529160200191610ce7565b820191906000526020600020905b815481529060010190602001808311610cca57829003601f168201915b505050505081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401610d5192919061142e565b6020604051808303816000875af1158015610d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d949190611483565b610dd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dca906114fc565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0382610dd8565b9050919050565b610e1381610df8565b82525050565b6000602082019050610e2e6000830184610e0a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610e7457610e73610e34565b5b50565b6000819050610e8582610e63565b919050565b6000610e9582610e77565b9050919050565b610ea581610e8a565b82525050565b6000602082019050610ec06000830184610e9c565b92915050565b60008115159050919050565b610edb81610ec6565b82525050565b6000602082019050610ef66000830184610ed2565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f36578082015181840152602081019050610f1b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f5e82610efc565b610f688185610f07565b9350610f78818560208601610f18565b610f8181610f42565b840191505092915050565b60006020820190508181036000830152610fa68184610f53565b905092915050565b60028110610fbf57610fbe610e34565b5b50565b6000819050610fd082610fae565b919050565b6000610fe082610fc2565b9050919050565b610ff081610fd5565b82525050565b600060208201905061100b6000830184610fe7565b92915050565b600080fd5b61101f81610df8565b811461102a57600080fd5b50565b60008135905061103c81611016565b92915050565b60006020828403121561105857611057611011565b5b60006110668482850161102d565b91505092915050565b7f596f7520617265206e6f7420616c6c6f77656420746f206361727279206f757460008201527f207468697320616374696f6e0000000000000000000000000000000000000000602082015250565b60006110cb602c83610f07565b91506110d68261106f565b604082019050919050565b600060208201905081810360008301526110fa816110be565b9050919050565b7f5468697320636f6e74726163742068617320616c7265616479206265656e206360008201527f616e63656c6c6564000000000000000000000000000000000000000000000000602082015250565b600061115d602883610f07565b915061116882611101565b604082019050919050565b6000602082019050818103600083015261118c81611150565b9050919050565b7f5468697320636f6e7472616374206973206e6f206c6f6e67657220616374697660008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006111ef602183610f07565b91506111fa82611193565b604082019050919050565b6000602082019050818103600083015261121e816111e2565b9050919050565b7f5061796d656e742068617320616c7265616479206265656e2073656e74000000600082015250565b600061125b601d83610f07565b915061126682611225565b602082019050919050565b6000602082019050818103600083015261128a8161124e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112d857607f821691505b6020821081036112eb576112ea611291565b5b50919050565b7f5468697320636f6e7472616374206973206e6f206c6f6e6765722070656e646960008201527f6e67000000000000000000000000000000000000000000000000000000000000602082015250565b600061134d602283610f07565b9150611358826112f1565b604082019050919050565b6000602082019050818103600083015261137c81611340565b9050919050565b7f5468697320636f6e74726163742068617320616c7265616479206265656e206360008201527f6c6f736564000000000000000000000000000000000000000000000000000000602082015250565b60006113df602583610f07565b91506113ea82611383565b604082019050919050565b6000602082019050818103600083015261140e816113d2565b9050919050565b6000819050919050565b61142881611415565b82525050565b60006040820190506114436000830185610e0a565b611450602083018461141f565b9392505050565b61146081610ec6565b811461146b57600080fd5b50565b60008151905061147d81611457565b92915050565b60006020828403121561149957611498611011565b5b60006114a78482850161146e565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b60006114e6601583610f07565b91506114f1826114b0565b602082019050919050565b60006020820190508181036000830152611515816114d9565b905091905056fea264697066735822122060799b754133f8d775df50611b917c696e0373bbb53d3e383ecf6ddd8404de9b64736f6c63430008180033";

type FixedRateAgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FixedRateAgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FixedRateAgreement__factory extends ContractFactory {
  constructor(...args: FixedRateAgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _employerId: string,
    _employeeId: string,
    _employerAddress: AddressLike,
    _currency: AddressLike,
    _fixedPayment: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _employerId,
      _employeeId,
      _employerAddress,
      _currency,
      _fixedPayment,
      overrides || {}
    );
  }
  override deploy(
    _employerId: string,
    _employeeId: string,
    _employerAddress: AddressLike,
    _currency: AddressLike,
    _fixedPayment: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _employerId,
      _employeeId,
      _employerAddress,
      _currency,
      _fixedPayment,
      overrides || {}
    ) as Promise<
      FixedRateAgreement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FixedRateAgreement__factory {
    return super.connect(runner) as FixedRateAgreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FixedRateAgreementInterface {
    return new Interface(_abi) as FixedRateAgreementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FixedRateAgreement {
    return new Contract(address, _abi, runner) as unknown as FixedRateAgreement;
  }
}
